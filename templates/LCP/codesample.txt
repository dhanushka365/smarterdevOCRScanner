image = img_cv.copy()
level = 'word'
for l,x,y,w,h,c,txt in df[['level','left','top','width','height','conf','text']].values:
    #print(l,x,y,w,h,c)
    if level == 'page':
        if l == 1:
            cv2.rectangle(image,(x,y),(x+w,y+h),(0,0,0),2)
        else:
            continue
            
    elif level == 'block':
        if l == 2:
            cv2.rectangle(image,(x,y),(x+w,y+h),(255,0,0),2)
        else:
            continue
    
    elif level == 'para':
        if l == 3:
            cv2.rectangle(image,(x,y),(x+w,y+h),(0,255,0),2)
        else:
            continue
    
    elif level == 'line':
        if l == 4:
            cv2.rectangle(image,(x,y),(x+w,y+h),(0,0,255),2)
        else:
            continue
            
    elif level == 'word':
        if l == 5:
            cv2.rectangle(image,(x,y),(x+w,y+h),(0,255,0),2)
            cv2.putText(image,txt,(x,y),cv2.FONT_HERSHEY_PLAIN,1,(255,0,0),2)
        else:
            continue
            
# Resize the image to fit the screen size
desired_width = 3200  # Set desired width
desired_height = 1000  # Set desired height

# Resize the image while maintaining aspect ratio
aspect_ratio = image.shape[1] / image.shape[0]
if aspect_ratio > 1:  # Image is wider than tall
    new_width = desired_width
    new_height = int(desired_width / aspect_ratio)
else:  # Image is taller than wide
    new_height = desired_height
    new_width = int(desired_height * aspect_ratio)

# Resize the image
resized_image = cv2.resize(image, (new_width, new_height))

# Display the resized image
cv2.imshow("Bounding Box", resized_image)
cv2.waitKey(0)
cv2.destroyAllWindows()